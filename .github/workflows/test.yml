name: test

on:
 workflow_dispatch:
   inputs:
      sha:
        description: 'commit SHA'
        required: true
   
jobs:    
  one:
    runs-on: ubuntu-latest
    name: one
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.3.0
        with:
          owner: irfanazam1
          repo: githubactions
          github_token: ${{ secrets.PAT }}
          workflow_file_name: one.yml
          wait_interval: 300
          inputs: '{"sha":"123456"}'
          propagate_failure: true
          trigger_workflow: true
          wait_workflow: true
  
  two:
    runs-on: ubuntu-latest
    name: two
    needs: one
    environment:
      name: staging
    steps:
      - run: echo "completed"  
  three:
    runs-on: ubuntu-latest
    name: three
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.3.0
        with:
          owner: irfanazam1
          repo: githubactions
          github_token: ${{ secrets.PAT }}
          workflow_file_name: three.yml
          wait_interval: 30
          inputs: '{"sha":"123456"}'
          propagate_failure: true
          trigger_workflow: true
          wait_workflow: true  
      
  finally:
    runs-on: ubuntu-latest
    name: Finalize Status
    needs:
     - one
     - two
     - three
    if: always()
    steps:
    - uses: technote-space/workflow-conclusion-action@v2
    - run: echo "Workflow - ${{ env.WORKFLOW_CONCLUSION }}"        
 
  cleanup:
    runs-on: ubuntu-latest
    name: Cleanup
    needs:
     - one
     - two
     - three
    steps:
    - uses: technote-space/workflow-conclusion-action@v2
    - name: check-failure
      if: $env.WORKFLOW_CONCLUSION == 'failure'
      run: |
       curl --fail --request DELETE --url "https://api.github.com/repos/irfanazam1/releases/RC-${{ github.event.inputs.sha}}" \
       --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
       --header 'content-type: application/json'
      
       curl --fail --request DELETE --url "https://api.github.com/repos/irfanazam1/refs/tags/RC-${{ github.event.inputs.sha}}" \
       --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
       --header 'content-type: application/json'
